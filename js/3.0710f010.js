(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{"49e3":function(e,t,i){"use strict";var a=i("1344");t["a"]=Object(a["a"])()},a4ed:function(e,t,i){},da82:function(e,t,i){"use strict";i("a4ed")},e344:function(e,t,i){"use strict";i.r(t);var a=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("q-page",{staticClass:"flex flex-center"},[i("div",{staticClass:"sr__scan__item"},[e.canSupport?i("q-btn-group",[i("q-btn",{on:{click:e.doScan}},[e._v("Start Scan")]),i("q-btn",{on:{click:e.stopScan}},[e._v("Stop Scan")]),e.videoDevices.length>1?i("q-btn",{on:{click:e.switchCamera}},[e._v("Switch")]):e._e(),i("q-btn",{on:{click:e.test}},[e._v("test")])],1):e._e(),e.scanFlag?i("video",{ref:"scannerRef",attrs:{id:"video","webkit-playsinline":"true",playsinline:"true"}}):e._e(),i("textarea",{attrs:{cols:100,rows:6},domProps:{value:e.info}})],1)])},s=[],n=i("f2c6"),c=i("49e3"),o={name:"PageIndex",data(){return{scanFlag:!0,scaner:null,canSupport:!0,cameraNO:0,info:"",videoDevices:[],device:null,audio:new Audio("scan.mp3")}},destroyed(){c["a"].off("scaned",this.onScaned)},async mounted(){console.info("mounted");const e=new n["a"]("video");this.scaner=e,this.canSupport=e.isMediaStreamAPISupported,c["a"].on("scaned",this.onScaned)},methods:{async stopScan(){return this.scaner.stopScan()},async doScan(){return this.scaner.scan()},async playAudio(){this.audio.muted&&(this.audio.muted=!1),this.audio.play()},async test(){},onScaned(e){console.info(`scan success! value is:${e}`),this.info=e,this.playAudio()},async switchCamera(){this.scaner.switchCamera()}}},r=o,d=(i("da82"),i("2877")),h=Object(d["a"])(r,a,s,!1,null,"419cb99a",null);t["default"]=h.exports},f2c6:function(e,t,i){"use strict";i("e01a");var a=i("224f"),s=i("b178"),n=i("49e3");const c=Symbol("privateObj");class o{constructor(e){const t=new a["BrowserMultiFormatReader"],i=[],s=!1,o=()=>{const e=this[c].videoDevices.findIndex((e=>"后置镜头"===e.label));return n["a"].emit("test",{mainCamIndex:e,videoDevices:this[c].videoDevices}),e>-1?e:this[c].videoDevices.length-1};return this[c]={codeReader:t,videoDevices:i,isVideoDevicesInit:s,getDefaultDeviceNO:o},this.displayEleID=e,this.cameraNO=-1,this}get isMediaStreamAPISupported(){return navigator&&navigator.mediaDevices&&"enumerateDevices"in navigator.mediaDevices}get isScanning(){return this[c].codeReader.isVideoPlaying(this[c].codeReader.getMediaElement(this.displayEleID,"video"))}async getVideoDevices(){return this[c].isVideoDevicesInit||await this[c].codeReader.listVideoInputDevices().then((e=>{this[c].videoDevices=e,this[c].isVideoDevicesInit=!0})).catch((e=>{throw console.error(e),e})),this[c].videoDevices}async switchCamera(e){const t=await this.getVideoDevices();if(t.length>1){let i=0;i=e?e<t.length?e:this[c].getDefaultDeviceNO():(this.cameraNO+1)%t.length,this.cameraNO!==i&&(this.isScanning&&await this.stopScan(),this.cameraNO=i,await this.scan())}}async scan(){const e=await this.getVideoDevices();if(e&&e.length>0){this.cameraNO=this.cameraNO>-1&&this.cameraNO<e.length?this.cameraNO:this[c].getDefaultDeviceNO();const t=e[this.cameraNO].deviceId;return this[c].codeReader.decodeFromVideoDevice(t,this.displayEleID,Object(s["c"])((async(e,t)=>{if(e&&n["a"].emit("scaned",e),t&&!(t instanceof a["NotFoundException"]))throw console.error(t),n["a"].emit("scanError",t),t}),1e3))}}async stopScan(){this[c].codeReader.reset()}}t["a"]=o}}]);